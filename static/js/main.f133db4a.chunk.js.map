{"version":3,"sources":["components/todoList.js","components/popup.js","App.js","index.js"],"names":["TodoList","itemText","handleDelete","id","handleEdit","className","onClick","title","Popup","setEmpty","text","App","useState","input","setInput","localStorage","getItem","JSON","parse","items","setItems","isEditOn","setIsEditOn","toEdit","setToEdit","isEmpty","setIsEmpty","isSame","setIsSame","isEditNull","setIsEditNull","inputRef","useRef","useEffect","setItem","stringify","value","deleteItem","filter","arrItems","current","focus","onSubmit","e","preventDefault","i","length","name","newInput","map","item","allInput","Date","now","autoComplete","type","placeholder","onChange","target","ref","elem","ReactDOM","render","document","getElementById"],"mappings":"uPAuBeA,MAlBf,YAA+D,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,WAC9C,OACE,uBAAMC,UAAU,YAAhB,UACE,oBAAIA,UAAU,iBAAd,SAAgCJ,IAChC,cAAC,IAAD,CACEK,QAAS,kBAAMF,EAAWD,EAAIF,IAC9BI,UAAU,iBACVE,MAAM,cAER,cAAC,IAAD,CACEF,UAAU,mBACVE,MAAM,cACND,QAAS,kBAAMJ,EAAaC,UCJrBK,MAXf,YAAoC,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KACzB,OACE,sBAAKL,UAAU,QAAf,UACE,mBAAGA,UAAU,aAAb,SAA2BK,IAC3B,wBAAQL,UAAU,eAAeC,QAASG,EAA1C,oBCMS,SAASE,IACtB,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAPZG,aAAaC,QAAQ,SACJC,KAAKC,MAAMH,aAAaC,QAAQ,UAAY,IAM3E,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCR,oBAAS,GAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAA4BV,mBAAS,MAArC,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAA8BZ,oBAAS,GAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,EAA4Bd,oBAAS,GAArC,mBAAOe,EAAP,KAAeC,EAAf,KACA,EAAoChB,oBAAS,GAA7C,mBAAOiB,EAAP,KAAmBC,EAAnB,KACMC,EAAWC,mBAOjBC,qBAAU,WACRlB,aAAamB,QAAQ,QAASjB,KAAKkB,UAAUhB,MAC5C,CAACA,IAEJc,qBAAU,cAAU,CAACZ,IAErB,IAmCMjB,EAAa,SAACD,EAAIiC,GACtBd,GAAY,GACZE,EAAUrB,GACVW,EAASsB,IAILC,EAAa,SAAClC,GAClBiB,GAAS,SAACD,GACR,OAAOA,EAAMmB,QAAO,SAACC,GACnB,OAAOA,EAASpC,KAAOA,SAUvBM,EAAW,WACfiB,GAAW,GACXE,GAAU,GACVE,GAAc,IAOhB,OAJAG,qBAAU,WACRF,EAASS,QAAQC,UAChB,CAACV,IAGF,sBAAK1B,UAAU,WAAf,UACGoB,EACC,cAAC,EAAD,CAAOf,KAAM,8BAA+BD,SAAUA,IACpD,KAEHkB,EACC,cAAC,EAAD,CAAOjB,KAAM,qBAAsBD,SAAUA,IAC3C,KAEHoB,EACC,cAAC,EAAD,CAAOnB,KAAM,6BAA8BD,SAAUA,IACnD,KACJ,6DAEA,uBAAMJ,UAAU,YAAYqC,SAhFX,SAACC,GACpBA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,EAAM2B,OAAQD,IAChC,GAAI1B,EAAM0B,GAAGE,OAASlC,EAIpB,OAHAe,GAAU,GACVd,EAAS,SACTQ,GAAY,GAIhB,GAAID,EACF,GAAKR,EAEE,CACL,IAAMmC,EAAW7B,EAAM8B,KAAI,SAACC,GAC1B,OAAe,OAAX3B,GAAmBA,IAAW2B,EAAK/C,GAC9B,2BAAK+C,GAAZ,IAAkBH,KAAMlC,IAEnBqC,KAET1B,EAAU,MACVF,GAAY,GACZF,EAAS4B,QAVTlB,GAAc,QAahB,GAAKjB,EAEE,CACL,IAAMsC,EAAW,CAAEhD,GAAIiD,KAAKC,MAAON,KAAMlC,GACzCO,EAAS,GAAD,mBAAKD,GAAL,CAAYgC,UAHpBzB,GAAW,GAMfZ,EAAS,KAgD6CwC,aAAa,MAAjE,UACE,uBACEC,KAAK,OACLC,YAAY,aACZpB,MAAOvB,EACP4C,SAhGa,SAACd,GACpB,IAAMP,EAAQO,EAAEe,OAAOtB,MACvBtB,EAASsB,IA+FHuB,IAAK5B,EACLgB,KAAK,OACL1C,UAAU,eAEZ,wBAAQkD,KAAK,SAASlD,UAAU,cAAhC,SACGgB,EAAW,YAAc,gBAG7BF,EAAM2B,OAAS,EACd,sBAAKzC,UAAU,oBAAf,UACE,oBAAIA,UAAU,iBAAd,SACGc,EAAM8B,KAAI,SAACW,GAAD,OACT,cAAC,EAAD,CAEEzD,GAAIyD,EAAKzD,GACTF,SAAU2D,EAAKb,KACf3C,WAAYA,EACZF,aAAcmC,GAJTuB,EAAKzD,SAQfgB,EAAM2B,OAAS,EACd,qBAAKzC,UAAU,WAAf,SACE,wBAAQA,UAAU,kBAAkBC,QA1DzB,WACrBc,EAAS,KAyDC,yBAIA,QAGN,qBAAKf,UAAU,QAAf,SACE,mBAAGA,UAAU,aAAb,0CClJVwD,IAASC,OAAO,cAACnD,EAAD,IAASoD,SAASC,eAAe,W","file":"static/js/main.f133db4a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./todoList.styles.scss\";\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\r\n\r\nfunction TodoList({ itemText, handleDelete, id, handleEdit }) {\r\n  return (\r\n    <span className=\"todo-list\">\r\n      <li className=\"todo-list_text\">{itemText}</li>\r\n      <FaRegEdit\r\n        onClick={() => handleEdit(id, itemText)}\r\n        className=\"todo-List_edit\"\r\n        title=\"Edit item\"\r\n      />\r\n      <RiDeleteBin5Fill\r\n        className=\"todo-List_delete\"\r\n        title=\"Delete item\"\r\n        onClick={() => handleDelete(id)}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nfunction Popup({ setEmpty, text }) {\r\n  return (\r\n    <div className=\"popup\">\r\n      <p className=\"popup-text\">{text}</p>\r\n      <button className=\"popup-button\" onClick={setEmpty}>\r\n        OK\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport \"./app.styles.scss\";\nimport TodoList from \"./components/todoList\";\nimport Popup from \"./components/popup\";\n\nconst getLocalItems = () => {\n  const lists = localStorage.getItem(\"lists\");\n  const retrievedLists = lists ? JSON.parse(localStorage.getItem(\"lists\")) : [];\n  return retrievedLists;\n};\n\nexport default function App() {\n  const [input, setInput] = useState();\n  const [items, setItems] = useState(getLocalItems());\n  const [isEditOn, setIsEditOn] = useState(false);\n  const [toEdit, setToEdit] = useState(null);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [isSame, setIsSame] = useState(false);\n  const [isEditNull, setIsEditNull] = useState(false);\n  const inputRef = useRef();\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setInput(value);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"lists\", JSON.stringify(items));\n  }, [items]);\n\n  useEffect(() => {}, [isEditOn]);\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].name === input) {\n        setIsSame(true);\n        setInput(\"\");\n        setIsEditOn(false);\n        return;\n      }\n    }\n    if (isEditOn) {\n      if (!input) {\n        setIsEditNull(true);\n      } else {\n        const newInput = items.map((item) => {\n          if (toEdit !== null && toEdit === item.id) {\n            return { ...item, name: input };\n          }\n          return item;\n        });\n        setToEdit(null);\n        setIsEditOn(false);\n        setItems(newInput);\n      }\n    } else {\n      if (!input) {\n        setIsEmpty(true);\n      } else {\n        const allInput = { id: Date.now(), name: input };\n        setItems([...items, allInput]);\n      }\n    }\n    setInput(\"\");\n  };\n\n  const handleEdit = (id, value) => {\n    setIsEditOn(true);\n    setToEdit(id);\n    setInput(value);\n  };\n\n  // delete items in todo list\n  const deleteItem = (id) => {\n    setItems((items) => {\n      return items.filter((arrItems) => {\n        return arrItems.id !== id;\n      });\n    });\n  };\n\n  // clearall\n  const handleClearAll = () => {\n    setItems([]);\n  };\n\n  const setEmpty = () => {\n    setIsEmpty(false);\n    setIsSame(false);\n    setIsEditNull(false);\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [inputRef]);\n\n  return (\n    <div className=\"todo-app\">\n      {isEmpty ? (\n        <Popup text={\"Enter a To-Do before adding\"} setEmpty={setEmpty} />\n      ) : null}\n\n      {isSame ? (\n        <Popup text={\"Todo already exist\"} setEmpty={setEmpty} />\n      ) : null}\n\n      {isEditNull ? (\n        <Popup text={\"Enter a todo before Saving\"} setEmpty={setEmpty} />\n      ) : null}\n      <h2>What's the Plan for Today ?</h2>\n\n      <form className=\"todo-form\" onSubmit={handlesubmit} autoComplete=\"off\">\n        <input\n          type=\"text\"\n          placeholder=\"Add a todo\"\n          value={input}\n          onChange={handleChange}\n          ref={inputRef}\n          name=\"text\"\n          className=\"todo-input\"\n        />\n        <button type=\"submit\" className=\"todo-button\">\n          {isEditOn ? \"Save Todo\" : \"Add Todo\"}\n        </button>\n      </form>\n      {items.length > 0 ? (\n        <div className=\"item-list-wrapper\">\n          <ul className=\"scroll-wrapper\">\n            {items.map((elem) => (\n              <TodoList\n                key={elem.id}\n                id={elem.id}\n                itemText={elem.name}\n                handleEdit={handleEdit}\n                handleDelete={deleteItem}\n              />\n            ))}\n          </ul>\n          {items.length > 1 ? (\n            <div className=\"clearall\">\n              <button className=\"clearall-button\" onClick={handleClearAll}>\n                Clear All\n              </button>\n            </div>\n          ) : null}\n        </div>\n      ) : (\n        <div className=\"intro\">\n          <p className=\"intro-text\">welcome to my to-do app</p>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}